name: CI
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-node_modules-
      - name: Install dependencies
        run: npm ci
      - run: npm run check
      - run: npm run stylelint
      - name: Run unit tests
        run: npm run test
      # Adapted from https://github.com/microsoft/playwright/issues/7249#issuecomment-2141021209
      - name: Get Playwright version
        run: |
          echo PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//') >> $GITHUB_ENV
      - name: Cache Playwright browsers
        id: cache-playwright-browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ runner.os }}-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright system dependencies
        run: node_modules/.bin/playwright install-deps chromium
      - name: Install Playwright browsers
        run: node_modules/.bin/playwright install chromium
        # Playwright will not re-download the browser if the latest version is already cached
        # if: steps.cache-playwright-browsers-outputs.cache-hit != 'true'
      - name: Run E2E tests
        run: node_modules/.bin/playwright test --project chromium
      - name: Build (PR)
        if: github.event_name == 'pull_request'
        run: npm run build
      - name: Setup Pages
        if: github.event_name != 'pull_request'
        id: setup_pages
        uses: actions/configure-pages@v5
      - name: Build (push)
        if: github.event_name != 'pull_request'
        run: |
          export VITE_APP_COMMIT_HASH=$(echo -n $GITHUB_SHA | head -c 10)
          node_modules/.bin/vite build --base "${{ steps.setup_pages.outputs.base_path }}"
          ln -s index.html dist/404.html
      - name: Upload artifact
        if: github.event_name != 'pull_request'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist
  deploy:
    needs: test
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
